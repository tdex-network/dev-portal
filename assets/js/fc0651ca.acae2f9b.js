"use strict";(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[3982],{626:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>d,toc:()=>c});var n=t(8168),o=(t(6540),t(5680));const a={title:"Getting Started",sidebar_position:2},i=void 0,d={unversionedId:"provider/feeder/getting_started",id:"version-0.9.1/provider/feeder/getting_started",title:"Getting Started",description:"Now that you have configured your feeder, it's time to start it up.",source:"@site/versioned_docs/version-0.9.1/provider/feeder/getting_started.md",sourceDirName:"provider/feeder",slug:"/provider/feeder/getting_started",permalink:"/docs/v0/provider/feeder/getting_started",draft:!1,editUrl:"https://github.com/tdex-network/dev-portal/edit/master/versioned_docs/version-0.9.1/provider/feeder/getting_started.md",tags:[],version:"0.9.1",sidebarPosition:2,frontMatter:{title:"Getting Started",sidebar_position:2},sidebar:"version-0.9.1/tutorialSidebar",previous:{title:"Overview",permalink:"/docs/v0/provider/feeder/overview"}},l={},c=[{value:"Run the binary",id:"run-the-binary",level:2},{value:"Run the container",id:"run-the-container",level:2},{value:"Securely connect feeder to daemon",id:"securely-connect-feeder-to-daemon",level:2},{value:"Example for standolone feeder",id:"example-for-standolone-feeder",level:4},{value:"Example for dockerized feeder",id:"example-for-dockerized-feeder",level:4}],s={toc:c},p="wrapper";function u(e){let{components:r,...t}=e;return(0,o.yg)(p,(0,n.A)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"Now that you have configured your feeder, it's time to start it up."),(0,o.yg)("p",null,"The service can be served in 2 different ways:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"as a ",(0,o.yg)("a",{parentName:"li",href:"#run-the-binary"},"standalone binary")),(0,o.yg)("li",{parentName:"ul"},"as a ",(0,o.yg)("a",{parentName:"li",href:"#run-the-container"},"Docker service"))),(0,o.yg)("p",null,"Depending on your preferences and needs you may want to proceed in one or the other way."),(0,o.yg)("p",null,"If you already know how to start a feeder and are interested to securely connect it to a remote daemon (with macaroons/TLS enabled) take a look ",(0,o.yg)("a",{parentName:"p",href:"#securely-connect-feeder-to-daemon"},"here"),"."),(0,o.yg)("h2",{id:"run-the-binary"},"Run the binary"),(0,o.yg)("p",null,"If you want to run your feeder as a standolne binary, you can download the latest version for your platform (linux or macOS) from the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/tdex-network/tdex-feeder/releases"},"release page"),"."),(0,o.yg)("p",null,"If you want to build it from source, you can follow the steps described in the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/tdex-network/tdex-feeder#build-it-yourself"},"README")," of the public repository. This requires ",(0,o.yg)("a",{parentName:"p",href:"https://golang.org/doc/install"},"Golang")," to be installed."),(0,o.yg)("p",null,"Now that you have the binary, it's time to execute it:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"# This requires having a config.json file in the same directory of the binary\n$ ./feederd-linux-amd64\n\n\n#\xa0This explicitly defines where to file the config file - it can have a different name!\nexport FEEDER_CONFIG_PATH=~/.feeder-config/config.example.json\n$ ./feederd-linux-amd64\n")),(0,o.yg)("h2",{id:"run-the-container"},"Run the container"),(0,o.yg)("p",null,"If you want to serve your feeder as a dockerized service, just download the latest image locally and run the container:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"#\xa0Pull the image from the github container registry\n$ docker pull ghcr.io/tdex-network/feederd:latest\n\n#\xa0Run the service\n$ docker run -rm --name feederd -v $HOME/.feeder-config/config.json:/config.json --network <network_with_tdexd_running> -d ghcr.io/tdex-network/feederd:latest\n")),(0,o.yg)("p",null,"Make sure to use the proper ",(0,o.yg)("em",{parentName:"p"},"rpc_address")," in the config file to connect to your daemon. For example, if you're serving the daemon as a docker container named ",(0,o.yg)("inlineCode",{parentName:"p"},"tdexd")," you will set it to ",(0,o.yg)("inlineCode",{parentName:"p"},"tdexd:9000")," taking advantage of the Docker internal DNS resolution. "),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"It's always a good practice to create a custom network where to run your inter-connected containers in order to isolate them.  ")),(0,o.yg)("h2",{id:"securely-connect-feeder-to-daemon"},"Securely connect feeder to daemon"),(0,o.yg)("p",null,"If you want to connect your feeder to a daemon with macaroon/TLS enabled on the Operator interface you have to:"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"Be sure you followed the ",(0,o.yg)("a",{parentName:"li",href:"/docs/v0/provider/daemon/getting_started/run_prod"},"instructions")," to configure your daemon properly"),(0,o.yg)("li",{parentName:"ol"},"Copy the ",(0,o.yg)("inlineCode",{parentName:"li"},"price.macaroon")," and ",(0,o.yg)("inlineCode",{parentName:"li"},"cert.pem")," generated by the daemon at startup (they can be found in daemon's datadir) to the machine hosting the feeder"),(0,o.yg)("li",{parentName:"ol"},"Add the ",(0,o.yg)("em",{parentName:"li"},"macaroons_path")," and the ",(0,o.yg)("em",{parentName:"li"},"tls_cert_path")," of the file mentioned above and change the ",(0,o.yg)("em",{parentName:"li"},"rpc_address")," for the target daemon in the feeder's config file")),(0,o.yg)("h4",{id:"example-for-standolone-feeder"},"Example for standolone feeder"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"$ export $FEEDER_CONFIG_PATH=~/.feeder-config/config.json\n$ ./feederd\n")),(0,o.yg)("p",null,"Feeder's config file:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "price_feeder": "kraken",\n    "interval": 300000,\n    "targets": [\n      {\n        "macaroons_path": "/home/user/.feeder-config/price.macaroon",\n        "tls_cert_path": "/home/user/.feeder-config/cert.pem",\n        "rpc_address": "provider.mydomain.com:9000"\n      }\n    ]\n}\n')),(0,o.yg)("h4",{id:"example-for-dockerized-feeder"},"Example for dockerized feeder"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"# Note that the files must be mounted as volumes of the container!\n$ docker run -rm -d \\\n    --name feederd \\\n    -v $HOME/.feeder-config/config.json:/config.json \\\n    -v $HOME/feeder-config/price.macaroon:/price.macaroon \\\n    -v $HOME/feeder-config/cert.pem:/cert.pem \\\n    ghcr.io/tdex-network/feederd:latest\n")),(0,o.yg)("p",null,"Feeder's config file:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "price_feeder": "kraken",\n    "interval": 300000,\n    "targets": [\n      {\n        "macaroons_path": "/price.macaroon",\n        "tls_cert_path": "/cert.pem",\n        "rpc_address": "provider.mydomain.com:9000"\n      }\n    ]\n}\n')))}u.isMDXComponent=!0},5680:(e,r,t)=>{t.d(r,{xA:()=>s,yg:()=>g});var n=t(6540);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function d(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),c=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=c(e.components);return n.createElement(l.Provider,{value:r},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),p=c(t),f=o,g=p["".concat(l,".").concat(f)]||p[f]||u[f]||a;return t?n.createElement(g,i(i({ref:r},s),{},{components:t})):n.createElement(g,i({ref:r},s))}));function g(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=f;var d={};for(var l in r)hasOwnProperty.call(r,l)&&(d[l]=r[l]);d.originalType=e,d[p]="string"==typeof e?e:o,i[1]=d;for(var c=2;c<a;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"}}]);