<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>TDEX Network Blog</title>
        <link>https://dev.tdex.network/blog</link>
        <description>TDEX Network Blog</description>
        <lastBuildDate>Fri, 04 Aug 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Announcing TDEX v2]]></title>
            <link>https://dev.tdex.network/blog/announcing-tdex-v2</link>
            <guid>announcing-tdex-v2</guid>
            <pubDate>Fri, 04 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Today we are pleased to announce the new version of the TDEX protocol.]]></description>
            <content:encoded><![CDATA[<p>Today we are pleased to announce the new version of the TDEX protocol.</p><p>The newest <code>v2</code> comes with updates to <strong>BOTD#3</strong> and <strong>BOTD#4</strong> that affect the way a trade is both presented and cooperatively crafted by a trader and a provider.</p><p>We have released a new major version of all our services in order to be compliant with TDEX v2.
The newest version <code>v1.0.0</code> of the daemon contains very few changes at the interface level, but at the same time, under the hood, it has been completely refactored by drastically improving its performances.</p><p>And the same stands for the official app! The new <code>v2.0.0</code> version of the app is a lot faster than the previous one and supports both versions of the TDEX protocol. You won't even notice if you're trading against a TDEX v1 or v2 provider!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-changed">What's changed?<a class="hash-link" href="#whats-changed" title="Direct link to heading">​</a></h2><p>The main change of the new protocol is the adoption of the new PSETv2 format (BIP-370) as a means to describe and (cooperatively) build the transactions.</p><p>This required inevitable breaking changes to <a href="/docs/latest/specs/swap-protocol/">BOTD#3</a>, so we took the chance to make some little but impactful changes to <a href="/docs/latest/specs/trade-protocol/">BOTD#4</a></p><p>Let's see briefly how the services have changed.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="daemon">Daemon<a class="hash-link" href="#daemon" title="Direct link to heading">​</a></h3><p>The service that has changed the most is unavoidably the daemon, which has undergone a huge process of redesigning and refactoring.</p><p>The biggest change of the new <code>v1.0.0</code> version is the detachment of the wallet. The daemon, in fact, now requires a connection to an <em>Ocean wallet</em> that acts as the bag of keys for crafting/signing transactions, but also as the source of all blockchain-related events.  </p><p>The coolest thing about this is that you can plug your daemon not only with the official <em>Ocean wallet</em> implementation but with any wallet that sticks with the <em>Ocean protos</em> really. This opens the daemon up to a lot of new scenarios - for example, you could wrap up your preferred wallet's API and let it be used by the daemon! </p><p>Now that the handling keys and watching the blockchain are not up to the daemon anymore, we have introduced a brand new feature that might turn out useful to you: you can set up price feeds for your markets!</p><p>This means that you can configure your provider to connect to some exchange (e.g. bitfinex) and feed your market with the prices retrieved from it asynchronously!</p><p>The providers come with the typical CLI - with a rethinked set of commands and flags - and a brand new service that takes care of migrating your daemon from the old <code>v0.9.x</code> the the new <code>v1.0.0</code>.</p><p>Take a look at the <a href="/docs/latest/provider/intro/">official documentation</a> and follow the tutorial to learn everything you need to manage your provider.</p><p>You can see the list of all the new <code>v2/</code> APIs by looking directly at the <a href="https://github.com/tdex-network/tdex-daemon/blob/master/api-spec/protobuf/tdex-daemon/v2" target="_blank" rel="noopener noreferrer">github repo</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dashboard">Dashboard<a class="hash-link" href="#dashboard" title="Direct link to heading">​</a></h3><p>The dashboard lets you set up your daemon by means of a user interface that might make you more comfortable compared to the CLI.</p><p>The main change that affects the new <code>v1.0.0</code> version of the dashboard is that it supports only daemons with version <code>v1.0.0</code> and won't be able to connect to older ones. You'll get notified with an error otherwise.</p><p>If you already used the dashboard, you won't see big changes on the user interface besides the higher number of options you have to customize your market.</p><p>###&nbsp;App</p><p>The app allows users to trade their funds against the markets of the providers listed on the public registry.</p><p>It supports both TDEX v1 and TDEX v2 protocols in order to offer them the smoothest experience. You won't even notice if they're trading against a TDEX v1-compatible or a v2-compatible provider!</p><p>We didn't make any relevant changes to the user interface of the app, but you'll notice for sure the step forward in terms of performance!</p><p>Much faster, and much reliable, the app has been refactored in order to sharply reduce the time spent on watching the blockchain.</p><p>Similarly to the daemon, the app gets notified about blockchain events in an asynchronous way instead of polling a block explorer. This grants a higher level of personage that you can appreciate especially when restoring your wallet - the very first operation done by the app once you update and unlock it.</p><p>Go to your app store and download the latest version of the app now to enjoy the new TDEX!</p>]]></content:encoded>
            <category>liquid</category>
            <category>tdex</category>
            <category>bitcoin</category>
            <category>v2</category>
        </item>
        <item>
            <title><![CDATA[Liquid Bitcoin peg-in(s) in the browser!]]></title>
            <link>https://dev.tdex.network/blog/liquid-pegin-browser</link>
            <guid>liquid-pegin-browser</guid>
            <pubDate>Mon, 20 Sep 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Any wallet developer can integrate trustless Liquid Bitcoin peg-in features in their own application, even in the browser!]]></description>
            <content:encoded><![CDATA[<p>Any wallet developer can integrate trustless Liquid Bitcoin peg-in features in their own application, even in the browser!</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> --save pegin</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># or with yarn</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">yarn</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token plain"> pegin</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then in your JavaScript or TypeScript project</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> ElementsPegin </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'pegin'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// initialize the module</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> peginModule </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">new</span><span class="token plain"> </span><span class="token class-name">ElementsPegin</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">await</span><span class="token plain"> ElementsPegin</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">withGoElements</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">await</span><span class="token plain"> ElementsPegin</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">withLibwally</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// get a pegin address to deposit Bitcoin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> peginAddress </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">await</span><span class="token plain"> peginModule</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getMainchainAddress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  claimScript </span><span class="token comment" style="color:rgb(98, 114, 164)">// Liquid scriptpubkey</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// deposit funds to the Bitcoin address</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin" style="color:rgb(189, 147, 249)">console</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">log</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">peginAddress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// retrieve the raw bitcoin transaction hex encoded and the merkle block proof, pass them along the Liquid script used to generate the pegin address</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">let</span><span class="token plain"> claimTx </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">await</span><span class="token plain"> peginModule</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">claimTx</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    btcTxHex</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    btcTxOutProof</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    claimScript</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// Now you can broadcast the transaction to the Liquid Network</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="whats-a-peg-in">What's a peg-in?<a class="hash-link" href="#whats-a-peg-in" title="Direct link to heading">​</a></h3><p><a href="https://liquid.net" target="_blank" rel="noopener noreferrer">Liquid Network</a> allows anyone to "convert" BTC into L-BTC, the sidechain native asset, with a process called <strong>peg-in</strong>: it consists in sending Bitcoin to the Liquid federation multisignature script tweaked with the user's Liquid script. </p><p>After 102 Bitcoin mainchain blocks, the user can <strong>claim</strong> his Liquid bitcoins creating a special Liquid transaction and broadcast it to the Liquid Network.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-a-user-can-peg-in">How a user can peg-in?<a class="hash-link" href="#how-a-user-can-peg-in" title="Direct link to heading">​</a></h3><p>At the moment the process is quite cumbersome and requires the user to use an Elements node via command line interface. This basically forced the majority of users to use centralized exchanges, involving a custodial process and counterparty risks.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="trustless-peg-in-in-the-browser">Trustless peg-in in the browser<a class="hash-link" href="#trustless-peg-in-in-the-browser" title="Direct link to heading">​</a></h3><p>TDEX allows anyone to trade Liquid assets freely without being custodian of funds and the major road block to increase TDEX and Liquid Network usage is to let people to get Liquid Bitcoin with their mainchain Bitcoin.</p><p>Browsers and mobile apps built with web technologies such as React Native or Cordova can now use the npm <a href="https://www.npmjs.com/package/pegin" target="_blank" rel="noopener noreferrer">pegin</a> module and integrate this in few lines of code.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="try-now">Try now!<a class="hash-link" href="#try-now" title="Direct link to heading">​</a></h3><p>Try the pegin feature, now live in the TDEX mobile app!</p><ul><li>Download iOS from <a href="https://apps.apple.com/app/truedex-trading-unleashed/id1545948177" target="_blank" rel="noopener noreferrer">App Store</a></li><li>Download Android from <a href="https://play.google.com/store/apps/details?id=io.sevenlabs.app" target="_blank" rel="noopener noreferrer">Play Store</a> or install the <a href="https://github.com/TDex-network/tdex-app/releases" target="_blank" rel="noopener noreferrer">APK from Github Releases</a></li></ul>]]></content:encoded>
            <category>pegin</category>
            <category>liquid</category>
            <category>tdex</category>
            <category>bitcoin</category>
        </item>
        <item>
            <title><![CDATA[Deploy a TDEX Daemon to AWS with Terraform]]></title>
            <link>https://dev.tdex.network/blog/tdex-terraform-deploy-aws</link>
            <guid>tdex-terraform-deploy-aws</guid>
            <pubDate>Wed, 15 Sep 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Configure and run the TDEX box easily using Terraform automation.]]></description>
            <content:encoded><![CDATA[<p>Configure and run the TDEX box easily using Terraform automation. </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="create-a-user-and-obtain-aws-keys">Create a user and obtain AWS Keys<a class="hash-link" href="#create-a-user-and-obtain-aws-keys" title="Direct link to heading">​</a></h3><p>As a first step it is required to obtain AWS access and secret keys. Best practice is to create a new user in AWS IAM.
Please navigate to Services &gt; IAM page &gt; Add user.
Open the AWS IAM users page, and click on Add user. Provide user with name and select Programmatic access on the Access type section. </p><p><img loading="lazy" alt="Add User" src="/assets/images/add-user-11d882df7faae15f701edb54ee2ab67c.png" width="1014" height="518" class="img_ev3q"></p><p>Next, make sure that your AWS account (access key) has all the required privileges to create EC2 instances and S3 access.
Permissions you need: EC2 full, S3 full and VPC access.</p><p><img loading="lazy" alt="Attach permissions" src="/assets/images/attach-perms-617d07e15336bce352380e648778a124.png" width="1035" height="618" class="img_ev3q"></p><p>Once you add Permissions and Tags, click Create user. That will bring you to the latest page provided with AWS Access and Secret Keys.
Copy your keys to a safe place and do not share them with anyone.</p><p><img loading="lazy" alt="Attach permissions" src="/assets/images/user-keys-bf94f5fd19fa23443ecccf24126a65b9.png" width="1036" height="523" class="img_ev3q"></p><p>Check the documentation <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html" target="_blank" rel="noopener noreferrer">here</a></p><hr><h3 class="anchor anchorWithStickyNavbar_LWe7" id="install-terraform">Install Terraform<a class="hash-link" href="#install-terraform" title="Direct link to heading">​</a></h3><p>Next step is to install Terraform on your machine.
The easiest way is to follow the official documentation <a href="https://www.terraform.io/docs/cli/install/apt.html" target="_blank" rel="noopener noreferrer">here</a>.
For Debian and Ubuntu APT Packages, you can also follow this installation.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"> -fsSL https://apt.releases.hashicorp.com/gpg </span><span class="token operator">|</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> apt-key </span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token plain"> -</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> apt-add-repository </span><span class="token string" style="color:rgb(255, 121, 198)">"deb [arch=</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">dpkg --print-architecture</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token string" style="color:rgb(255, 121, 198)">] https://apt.releases.hashicorp.com </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">lsb_release -cs</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token string" style="color:rgb(255, 121, 198)"> main"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> terraform</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><h3 class="anchor anchorWithStickyNavbar_LWe7" id="proceed-with-cloning-and-deployment">Proceed with cloning and deployment<a class="hash-link" href="#proceed-with-cloning-and-deployment" title="Direct link to heading">​</a></h3><p>Clone the TDEX Box repository and enter its directory. </p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> clone https://github.com/tdex-network/tdex-box.git</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> tdex-box</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p>On the AWS AMI Marketplace, find Ubuntu 20.04 public AMI, accessible in the region you are planing to deploy the service and copy its AMI ID. </p><p>Once you have everything in place, just execute deploy.sh and it will prompt you for all the parameters in the same order provided above.
Since it is good practice to have a backup enabled, please provide S3 bucket a name when deploying.
Please enter the parameters carefully. </p><p><strong>Make sure you copy the IP address after the deployment is over.</strong>
This is your TDEX endpoint IP, and it can be accessed over port 9000.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> terabox/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">chmod</span><span class="token plain"> +x deploy.sh</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ ./deploy.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" alt="Deploy" src="/assets/images/deploy-3bf69430842f2fe5c689a7f8fe254acd.png" width="772" height="614" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="tor">Tor<a class="hash-link" href="#tor" title="Direct link to heading">​</a></h3><p>When executing deploy.sh, you can also setup your service behind Tor.
You can provide your own V3 Onion private key, or simply leave it empty in order to have the service to generate it for you. </p><p>Connect to your Linux box over SSH and get onion endpoint.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">ssh</span><span class="token plain"> -i ~/.ssh/key_location ubuntu@your.tdex.host.ip</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">docker</span><span class="token plain"> </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">exec</span><span class="token plain"> tor onions</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Once you have your Onion endpoint, please follow <a href="https://dev.tdex.network/docs/provider/registry" target="_blank" rel="noopener noreferrer">this</a> tutorial on how to register your onion endpoint in the <a href="https://github.com/TDex-network/tdex-registry" target="_blank" rel="noopener noreferrer">public TDEX registry </a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="install-and-use-tdex-cli-on-you-local-machine">Install and use TDEX-CLI on you local machine<a class="hash-link" href="#install-and-use-tdex-cli-on-you-local-machine" title="Direct link to heading">​</a></h3><p>TDEX is a CLI (GRPC client), that can be used to interact with a remote TDEX-daemon endpoint.
We need to init/configure tdex-cli, which is a way of authenticating to the remote running deamon.
When configuring the service, we need to provide several things:</p><ul><li>tls_cert_path</li><li>macaroons_path</li><li>rpcserver (this will be IP of machine where tdex-box is deployed)</li></ul><p>To install TDEX CLI you need to run <strong>getCli.sh</strong> located in scripts folder. If installed successfully tdex-cli will print help menu.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">chmod</span><span class="token plain"> +x terabox/scripts/getCli.sh</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> ./terabox/scripts/getCli.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Once you have installed tdex-cli, you will need to download the TLS certificate and macaroons from your tdexd host machine in order to connect remotely. This command will download the whole tdexd/ folder which is a copy of your container deamon. </p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$  </span><span class="token function" style="color:rgb(80, 250, 123)">scp</span><span class="token plain"> -r user@your.tdex.host.ip:</span><span class="token environment constant" style="color:rgb(189, 147, 249)">$HOME</span><span class="token plain">/tdex-box/tdexd </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Configure the tdex-cli with downloaded macaroons and certificate, and add your remote endpoint IP. </p><ul><li>cert.pem is located at $HOME/tdex-box/tdexd/tls/cert.pem on the remote machine</li><li>admin.macaroon is located at $HOME/tdex-box/tdexd/macaroons/admin.macaroon on the remote machine</li></ul><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># By default it looks for the daemon operator gRPC interface on localhost:9000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># or on a remote machine</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ tdex config init --rpcserver</span><span class="token operator">=</span><span class="token plain">tdex.remote.host.ip:9000 --tls_cert_path</span><span class="token operator">=</span><span class="token plain">./cert.pem --macaroons_path</span><span class="token operator">=</span><span class="token plain">./admin.macaroon</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">##### OR you can use the config command to set your values</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ tdex config</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ tdex config </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">set</span><span class="token plain"> tls_cert_path ./cert.pem</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ tdex config </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">set</span><span class="token plain"> macaroons_path ./admin.macaroon</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ tdex config </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">set</span><span class="token plain"> rpcserver tdex.remote.host.ip </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">After those are set, you can </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">test</span><span class="token plain"> the TDEX daemon</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ tdex listmarket</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ tdex </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">help</span><span class="token plain">   </span><span class="token operator">&lt;</span><span class="token plain">-- </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">more</span><span class="token plain"> information and commands</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>For more information <a href="https://dev.tdex.network/docs/provider/daemon/getting_started/configure_cli" target="_blank" rel="noopener noreferrer">how to configure and use the TDEX CLI</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="deposit-funds">Deposit funds<a class="hash-link" href="#deposit-funds" title="Direct link to heading">​</a></h3><p><strong>Done!</strong> Now you are ready to <a href="https://dev.tdex.network/docs/provider/daemon/deposit_funds" target="_blank" rel="noopener noreferrer">deposit funds</a> to open a market and earn swap fees.</p>]]></content:encoded>
            <category>terraform</category>
            <category>automation</category>
            <category>tdex</category>
            <category>deploy</category>
        </item>
    </channel>
</rss>